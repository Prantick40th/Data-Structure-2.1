#include<bits/stdc++.h>
#include<stdio.h>

typedef struct node
{
    int data;
    struct node *link;
}Node;

Node *root = new Node();
Node *head = new Node();

void pushEnd(Node *head,int value)
{
    Node *current = head;

    while(current->link != NULL){
            current = current->link;
    }
    current->link = (Node*)malloc(sizeof(Node));
    current->link->data = value;
    current->link->link = NULL;
}

void push(Node *head,int value,int index)
{
    if(index == 0 )
    {
        root->link = (Node*)malloc(sizeof(Node));
        root->link->data = value;
        root->link->link = head;
        head = root->link;
    }
    else
    {
         int cnt = 1;
         Node *current = head;
         while(current!=NULL)
         {
             cnt++;
             current = current->link;
             if(cnt == index){
                Node *Push = new Node();
                Push = (Node*)malloc(sizeof(Node));
                current->link=Push;
                Push->data = value;
                Push->link = current->link->link;
             }
         }
    }
}

void popLast(Node *head)
{
    Node *current = head;

    while(current->link != NULL)
    {
        current = current->link;
    }

    while(current-> == NULL)
    {
        free(current);
    }
}

void printList(Node *head)
{
    Node *current = head;

    while(current!= NULL){
        printf("%d",current->data);
        current = current->link;
    }
}

int main()
{

    head = (Node*)malloc(sizeof(Node));
    root = (Node*)malloc(sizeof(Node));

    root->data = NULL;
    //root->link = head;


    Node *first = new Node();
    Node *sec = new Node();



    //push = (Node*)malloc(sizeof(Node));
    first = (Node*)malloc(sizeof(Node));
    sec = (Node*)malloc(sizeof(Node));

    head->data = 1;
    head->link = first;

    first->data=2;
    first->link=sec;

    sec->data = 3;
    sec->link=NULL;



    pushEnd(head,4);
    pushEnd(head,5);
    pushEnd(head,6);
    printList(head);
    printf("\n");

    //push(head,8,0);
   // head = root->link;
  //  push(head,9,0);
   // head = root->link;
   // printList(head);

    //push(head,4,3);
    //printList(head);

    popLast(head);
    printf("\n");
    printList(head);



}
